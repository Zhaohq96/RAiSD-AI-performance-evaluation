#!/bin/bash

show_help() {
    echo "Usage of process_dataset.sh"
    echo
    echo "sh process_dataset.sh tool_name dataset_name"
    echo
    echo "The output will be stored under the path result-dataset_name/tool_name, for example, result-mild-bottleneck-1K/FAST-NN."
    echo "Quick example:"
    echo "sh process_dataset.sh fast-nn mild-bottleneck-1K"
}

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    show_help
    exit 0
fi

eval "$(conda shell.bash hook)"

# Default parameters for evaluation, can be modified if needed
diploSHIC_win=128 # window size of extracting snps from raw ms for diploSHIC
SURFDAWave_win=670 # window size of extracting snps from raw ms for SURFDAWave, note that SURFDAWave requires at least 670 snps
T_REx_win=128 # window size of extracting snps from raw ms for T-REx
RAiSD_AI_win=128 # window size of extracting snps from raw ms for RAiSD-AI tools
CNN_Nguembang_Fadja_win=128 # window size of extracting snps from raw ms for CNN_Nguembang_Fadja
num_sim_train=1000 # number of simulations of each class of training sets, note that the training sets should be balanced
num_sim_test=1000 # number of simulations of each class of testing sets, note that the testing sets should be balanced
epochs=10 # number of epochs for deep-learning-based methods including diploSHIC, CNN_Nguembang_Fadja and RAiSD-AI tools
length=100000 # length of genomic sequence
target=50000 # target of region that will be extracted from the genomic sequences
d_type=1 # data type for RAiSD-AI tools
group=8 # group size for FATER-NN-G
mbs=0 # Specify if the selective sweep input datasets are generated by mbs (for raisd-ai tools only), 0 indicates that the datasets are not generated by mbs, 1 indicates that the datasets are generated by mbs

if [ "$2" = "high-intensity-recombination-hotspot-1K" ] || [ "$2" = "high-intensity-recombination-hotspot-5K" ] || [ "$2" = "high-intensity-recombination-hotspot-10K" ] || [ "$2" = "low-intensity-recombination-hotspot-1K" ] || [ "$2" = "low-intensity-recombination-hotspot-5K" ] || [ "$2" = "low-intensity-recombination-hotspot-10K" ]; then
	mbs=1
fi

if [ "$1" = "diploshic" ]; then
# Run diploSHIC
	conda activate diploSHIC
	sh run_diploSHIC.sh train dataset-"$2"/train/neutral.ms dataset-"$2"/train/selsweep.ms result-"$2"/diploSHIC/ $diploSHIC_win $length $epochs
	sh run_diploSHIC.sh test dataset-"$2"/test/neutral.ms dataset-"$2"/test/selsweep.ms result-"$2"/diploSHIC/ result-"$2"/diploSHIC/train/model/ $diploSHIC_win $length
	conda deactivate

elif [ "$1" = "surfdawave" ]; then
# Run SURFDAWave
	conda activate SURFDAWave
	sh run_SURFDAWave.sh train dataset-"$2"/train/neutral.ms dataset-"$2"/train/selsweep.ms result-"$2"/SURFDAWave/ $SURFDAWave_win $length $mbs
	sh run_SURFDAWave.sh test dataset-"$2"/test/neutral.ms dataset-"$2"/test/selsweep.ms result-"$2"/SURFDAWave/ result-"$2"/SURFDAWave/train/model/ $SURFDAWave_win $length $mbs
	conda deactivate

elif [ "$1" = "t-rex" ]; then
# Run T-REx
	conda activate T-REx
	sh run_T-REx.sh dataset-"$2"/train/neutral.ms dataset-"$2"/train/selsweep.ms dataset-"$2"/test/neutral.ms dataset-"$2"/test/selsweep.ms result-"$2"/T-REx/ $T_REx_win $length $num_sim_train $num_sim_test 
	conda deactivate

elif [ "$1" = "cnn-nguembang-fadja" ]; then
# Run CNN_Nguembang_Fadja
	conda activate CNN-Nguembang-Fadja
	sh run_CNN_Nguembang_Fadja.sh dataset-"$2"/ result-"$2"/CNN_Nguembang_Fadja/ $CNN_Nguembang_Fadja_win $length $target $epochs dataset-"$2"
	conda deactivate

elif [ "$1" = "sweepnet" ]; then
# Run SweepNet 
	conda activate raisd-ai
	sh run_RAiSD-AI.sh -i dataset-"$2"/ -a SweepNet -o result-"$2"/ -w $RAiSD_AI_win -l $length -t $target -e $epochs -d $d_type -n dataset-"$2" -b $mbs
	conda deactivate

elif [ "$1" = "fast-nn" ]; then
# Run FAST-NN
	conda activate raisd-ai
	sh run_RAiSD-AI.sh -i dataset-"$2"/ -a FAST-NN -o result-"$2"/ -w $RAiSD_AI_win -l $length -t $target -e $epochs -d $d_type -n dataset-"$2" -b $mbs
	conda deactivate

elif [ "$1" = "faster-nn" ]; then
# Run FASTER-NN
	conda activate raisd-ai
	sh run_RAiSD-AI.sh -i dataset-"$2"/ -a FASTER-NN -o result-"$2"/ -w $RAiSD_AI_win -l $length -t $target -e $epochs -d $d_type -n dataset-"$2" -b $mbs
	conda deactivate

elif [ "$1" = "faster-nn-g-8" ]; then
# Run FASTER-NN-G8
	conda activate raisd-ai
	sh run_RAiSD-AI.sh -i dataset-"$2"/ -a FASTER-NN-G -o result-"$2"/ -w $RAiSD_AI_win -l $length -t $target -e $epochs -d $d_type -g $group -n dataset-"$2" -b $mbs
	conda deactivate

elif [ "$1" = "faster-nn-g-128" ]; then
# Run FASTER-NN-G128
	conda activate raisd-ai
	sh run_RAiSD-AI.sh -i dataset-"$2"/ -a FASTER-NN-G -o result-"$2"/ -w $RAiSD_AI_win -l $length -t $target -e $epochs -d $d_type -g 128 -n dataset-"$2" -b $mbs
	conda deactivate

fi

